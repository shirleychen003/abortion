---
title: "How Opinions On Abortion Have Evolved Among American Adults"
subtitle: "Analysis of US General Social Survey in 2006 and 2016"
author: Shirley Chen
thanks: "Code and data in this report are available at: https://github.com/shirleychen003/abortion.git."
date: today
date-format: "long" 
format: pdf
abstract: abstract in progress :)
toc: true
number-sections: true
bibliography: bibliography.bib
---

```{r}
#| include: false
### Workspace Setup ###
library(tidyverse)
library(tinytex)
library(janitor)
library(here)
library(knitr)
library(usethis)
library(gitcreds)
library(kableExtra)
library(flextable)
library(gt)

#### Import data ####
cleaned_GSS_data <-
  read_csv("../data/cleaned_GSS_data.csv")

#### Variables ####
years <- c("2006", "2016")
responses <- c("yes", "no")
custom_yes_no_colours <- c("#3f8f29", "#de1a24")
religion_order <- c("Protestant", "Catholic", "Jewish", "None", "Other", "Buddhism", 
                    "Hinduism", "Other eastern religions", "Muslim/Islam", 
                    "Orthodox-Christian" , "Christian", "Native American", 
                    "Inter-nondenominational")

```

# Introduction

in progress...

In \[Data\], the data collection methodology, the data cleaning processes, and key variables. In \[Results\], the relationship between demographic information of participants and their responses as well as the overall change in importance is analyzed with supportive figures. Finally, in \[Discussion\], the significance and possible causes of our findings are explored within the factors of socioeconomic status, sex and age.

# Data

## Source Data and Methodology

Based at the University of Chicago since 1972, the GSS is a project with the objective of monitoring and analyzing the intricacies of American society [@GSSabout]. The GSS Data Explorer makes it so that data retrieved from the project is a publicly available resource, accessible to various types of people, such as educators, policymakers, or researchers through the National Opinion Research Center (NORC). It has even been referenced in leading publications, such as the New York Times and the Associated Press. Due to the variety of subjects covered regarding American society, the GSS is one of the most frequently visited resources for information for social sciences.

Majority of the GSS data was collected through face-to-face interviews with the target population of adults (18+) residing in the United States. The standard national survey methods were practiced, such as hiring interviewers and training supervisors when needed. Interviewers were required to complete a practice interview supervised by evaluators at NORC [@GSScodebook].

However, starting in 2002, computer-assisted personal interviewing (CAPI) methods were introduced [@GSScodebook]. The use of manual edits and keypunching were eliminated, and training to learn how to use CAPI was included. The dataset used for this paper was retrieved from the GSS Data Explorer website [@GSSexplorer]. All the survey data used to measure the public opinion on different reasons for abortion were in the Core Module of GSS and tagged with Abortion and Split Ballots; the specific variable names extracted were abany, abpoor, abhlth, and abrape. For the years and demographic data, the specific variable names extracted were year (later filtered to just 2006 and 2016), age, relig, and sex.

### Strengths and Limitations

### Biases to Consider

## Data Cleaning

The open source statistical programming language [@R-base] was used to clean and analyze the data, along with producing the graphs. The main packages that supported this process included [@R-tidyverse], [@R-ggplot2], [@R-knitr], [@R-janitor], and [@R-lubridate].

The cleaning process involved filtering the specific data variables used for our analysis from the downloaded GSS dataset, and renaming any variables with meaningful names. For example, rather than “abany” being the column name for “The woman wants an abortion for any reason?” , we renamed it to ‘any_reason’, as shown in @tbl-cleaneddata. Further, the numerical values representing the participants’ responses for the abortion (eg. Yes - 1, No - 2) and religion (eg. Protestant - 1, Catholic - 2, etc.) were changed to the representative words. @tbl-cleaneddata shows the old and new variable names for the abortion questioins used in cleaning, the description of variables, and sample responses.

```{r}
#| label: tbl-cleaneddata
#| echo: false
#| warning: false
#| tbl-cap: GSS Dataset

variable_data <- data.frame( 
  Variable = c( "abany", "abpoor", "abhlth", "abrape"),
  "New Name" = c( "any_reason", "low_income", "endangered_health", "rape"), 
  "Description of Reasons for Abortion" = c(
    "the woman wants an abortion for any reason", 
    "the family has a low income",
    "the woman's own health is endangered",
    "she became pregnant as a result of rape"), 
  "Example Response" = c("yes", "no", "yes", "no")
)

kable(variable_data, 
      col.names = c("Variable", 
                    "New Name",
                    "Description of Reasons for Abortion" ,
                    "Example Response"),
      booktabs = TRUE,
      linesep = ""
      )
```

## Data Terminology

The response choices for the questions regarding abortion and their respective code in brackets are as follows: Inapplicable (-100), No Answer (-99), Do Not Know/Cannot Choose (-98), Skipped on Web (-97), Yes (1), and No (2). The response choices for the religion question and their respective code in brackets are as follows: No Answer (-99), Do Not Know/Cannot Choose (-98), Skipped on Web (-97), Protestant (1), Catholic (2), Jewish (3), None (4), Other (5), Buddhism (6), Hinduism (7), Other eastern religions (8), Muslim/Islam (9), Orthodox-Christian (10), Christian (11), Native American (12), and Inter-nondenominational (13). For our graphs, we did not include the Inapplicable, No Answer, and Do Not Know/Cannot choose responses to focus on the discernible participant responses.

## Respondent Demographics

@tbl-agegroups displays the number of respondents among the different age groups for the 2006 and 2016 surveys. The classified age groups are ‘18-24’, ‘25-34’, ‘45-54’, ‘55-64’, and ‘65+’. The 18-24 age group had the least amount of participants each year, while the '35-44' age group had the highest proportion in 2006 and the '65+' age group had the highest proportion in 2016.

```{r}
#| label: tbl-agegroups
#| echo: false
#| warning: false
#| tbl-cap: Respondent Count of Participants in Age Groups in 2006 and 2016

age_group_2006 <- cleaned_GSS_data |>
  filter(year == 2006) |>

  mutate(age_group_2006 = case_when(
    age >= 18 & age <= 24 ~ "18-24",
    age >= 25 & age <= 34 ~ "25-34",
    age >= 35 & age <= 44 ~ "35-44",
    age >= 45 & age <= 54 ~ "45-54",
    age >= 55 & age <= 64 ~ "55-64",
    age >= 65 ~ "65+"
  )) |>
  count(age_group_2006) |>
  pivot_wider(names_from = age_group_2006, values_from = n)

age_group_2016 <- cleaned_GSS_data |>
  filter(year == 2016) |>
  mutate(age_group_2016 = case_when(
    age >= 18 & age <= 24 ~ "18-24",
    age >= 25 & age <= 34 ~ "25-34",
    age >= 35 & age <= 44 ~ "35-44",
    age >= 45 & age <= 54 ~ "45-54",
    age >= 55 & age <= 64 ~ "55-64",
    age >= 65 ~ "65+"
  )) |>
  count(age_group_2016) |>
  pivot_wider(names_from = age_group_2016, values_from = n)

# Put the Year column back
age_group_2006 <- mutate(age_group_2006, Year = 2006)
age_group_2016 <- mutate(age_group_2016, Year = 2016)

combined_age_group_table <- bind_rows(age_group_2006,
                                      age_group_2016)

combined_age_group_table <- combined_age_group_table |>
  select(Year, everything())

kable(combined_age_group_table,
      col.names = c("Year", "18-24", "25-34", "35-44", "45-54", "55-64", "65+"),
      booktabs = TRUE,
      linesep = ""
      )

```

@tbl-gender shows the number and percentage of male and female respondents for 1989, 1998, 2006, and 2016. The percentages of female participants were consistently higher than the male participants, as the female participant percentages were always above 50% while the male participant percentages ranged from low to high 40s.

```{r}
#| label: tbl-gender
#| echo: false
#| warning: false
#| tbl-cap: Respondent Gender Count and Percentage for 2006 and 2016

gender_demographic_data <- cleaned_GSS_data |>
  group_by(year, sex) |>
  summarise(count = n()) |>
  mutate(percentage = round((count / sum(count)) * 100, 2))

kable(gender_demographic_data, 
      col.names = c("Year", "Sex", "Count", "Percentage"),
      booktabs = TRUE,
      linesep = ""
      )
```

```{r}
#| label: tbl-age
#| echo: false
#| warning: false
#| tbl-cap: Total Respondent Mean, Median, Mode, Min, and Max Age by Year

age_2006_data <- cleaned_GSS_data |>
  filter(year==2006) |>
  select('age') |>
   summarise(
    mean = round(mean(age, na.rm = TRUE)),
    median = round(median(age, na.rm = TRUE)),
    mode = as.numeric(names(sort(table(age), decreasing = TRUE))[1]),
    min = min(age, na.rm = TRUE),
    max = round(max(age, na.rm = TRUE))
  )

age_2016_data <- cleaned_GSS_data |>
  filter(year==2016) |>
  select('age') |>
   summarise(
    mean = round(mean(age, na.rm = TRUE)),
    median = round(median(age, na.rm = TRUE)),
    mode = as.numeric(names(sort(table(age), decreasing = TRUE))[1]),
    min = min(age, na.rm = TRUE),
    max = round(max(age, na.rm = TRUE))
  )

combined_age_data <- bind_rows(age_2006_data, 
                               age_2016_data)
combined_age_data <- cbind(years, combined_age_data)


kable(combined_age_data, 
      col.names = c("Year",
                    "Mean", 
                    "Median",
                    "Mode", 
                    "Min", 
                    "Max"),
      booktabs = TRUE,
      linesep = ""
      )

```

@tbl-religion displays the proportion of participants of each religion in the survey in 2006 and 2016. The religion with the highest proportion of responses for both years was "Protestant" with 52.46% in 2006 and 47.70% in 2016. The religion with the lowest proportion of responses for 2006 was "Other eastern religions" with a value of 0.11%, and there was an equal amount of respondents for "Other eastern religions" and "Inter-nondenominational" with a value of 0.24% in 2016. 

```{r}
#| label: tbl-religion
#| echo: false
#| warning: false
#| tbl-cap: Respondent Religion Count and Percentage for 2006 

religion2006_data <- cleaned_GSS_data |>
  filter(year==2006)

religion2006_data <- religion2006_data |>
  group_by(religion) |>
  summarise(count = n()) |>
  mutate(
    religion = factor(religion, levels = religion_order),
    percentage = round((count / sum(count)) * 100, 2)
  )

# kable(religion2006_data,
#       col.names = c("Religion", "2006 Count", "2006 Percentages"),
#       booktabs = TRUE,
#       linesep = ""
#       )

religion2016_data <- cleaned_GSS_data |>
  filter(year==2016)

religion2016_data <- religion2016_data |>
  group_by(religion) |>
  summarise(count = n()) |>
  mutate(
    religion = factor(religion, levels = religion_order),
    percentage = round((count / sum(count)) * 100, 2)
  )

# kable(religion2016_data,
#       col.names = c("Religion", " 2016 Count", "2016 Percentages"),
#       booktabs = TRUE,
#       linesep = ""
#       )

religion2006_data_2 <- religion2006_data |>
  rename(count_2006 = count, percentage_2006 = percentage)

# Rename count and percentage columns in religion2016_cleaned_data
religion2016_data_2 <- religion2016_data |>
  rename(count_2016 = count, percentage_2016 = percentage)

# Combine the datasets using left_join
combined_data <- left_join(religion2006_data_2, 
                           religion2016_data_2,
                           by = "religion")

kable(combined_data,
      col.names = c("Religion",
      "2006 Count",
      "2006 Percentages",
      "2016 Count",
      "2016 Percentages"), 
      booktabs = TRUE,
      linesep = "")
```


## Responses

### Rape

@fig-rape displays the proportion of Yes and No responses in 2006 and 2016 to the question "Should it be possible for a pregnant woman to obtain a legal abortion if she became pregnant as a result of rape?"

```{r}
#| label: fig-rape
#| echo: false
#| warning: false
#| fig-cap: Proportion of Yes and No Responses in 2006 and 2016 to the question "Should it be possible for a pregnant woman to obtain a legal abortion if she became pregnant as a result of rape?"

# Rape Case Responses
rape_data <- cleaned_GSS_data[c('year', 'rape')]

rape_percentages <- rape_data |>
  count(year, rape) |>
  group_by(year) |>
  mutate(percentage = n / sum(n) * 100) 

rape_percentages$rape <- factor(
  rape_percentages$rape, levels =
    responses)

ggplot(rape_percentages, aes(
  x = as.factor(year),
  y = percentage, 
  fill = rape)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(
       x = "Year",
       y = "Percentage",
       fill = "Responses") +
  scale_y_continuous(labels = scales::percent_format(scale = 1), 
                     limits = c(0, 100)) + 
  scale_fill_manual(values = custom_yes_no_colours) +
  theme_minimal()
```

### Endangered Health

@fig-endangeredhealth displays the proportion of Yes and No responses in 2006 and 2016 to the question "Should it be possible for a pregnant woman to obtain a legal abortion if the woman's own health is seriously endangered by the pregnancy?"

```{r}
#| label: fig-endangeredhealth
#| echo: false
#| warning: false
#| fig-cap: Proportion of Yes and No Responses in 2006 and 2016 to the question "Should it be possible for a pregnant woman to obtain a legal abortion if the woman's own health is seriously endangered by the pregnancy?"

# Endangered Health Responses
endangered_health_data <- cleaned_GSS_data[c('year', 'endangered_health')]

endangered_health_percentages <- endangered_health_data |>
  count(year, endangered_health) |>
  group_by(year) |>
  mutate(percentage = n / sum(n) * 100) 

endangered_health_percentages$endangered_health <- factor(
  endangered_health_percentages$endangered_health, levels =
    responses)

ggplot(endangered_health_percentages, aes(
  x = as.factor(year),
  y = percentage, 
  fill = endangered_health)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(
       x = "Year",
       y = "Percentage",
       fill = "Responses") +
  scale_y_continuous(labels = scales::percent_format(scale = 1), 
                     limits = c(0, 100)) + 
  scale_fill_manual(values = custom_yes_no_colours) +
  theme_minimal()
```

### Low Income

@fig-lowincome displays the proportion of Yes and No responses in 2006 and 2016 to the question "Should it be possible for a pregnant woman to obtain a legal abortion if the family has a very low income and cannot afford any more children?"

```{r}
#| label: fig-lowincome
#| echo: false
#| warning: false
#| fig-cap: Proportion of Yes and No Responses in 2006 and 2016 to the question "Should it be possible for a pregnant woman to obtain a legal abortion if the family has a very low income and cannot afford any more children?"

# Endangered Health Responses
low_income_data <- cleaned_GSS_data[c('year', 'low_income')]

low_income_percentages <- low_income_data |>
  count(year, low_income) |>
  group_by(year) |>
  mutate(percentage = n / sum(n) * 100) 

low_income_percentages$low_income <- factor(
  low_income_percentages$low_income, levels =
    responses)

ggplot(low_income_percentages, aes(
  x = as.factor(year),
  y = percentage, 
  fill = low_income)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(
       x = "Year",
       y = "Percentage",
       fill = "Responses") +
  scale_y_continuous(labels = scales::percent_format(scale = 1), 
                     limits = c(0, 100)) + 
  scale_fill_manual(values = custom_yes_no_colours) +
  theme_minimal()
```

### Abortion for Any Reason

@fig-anyreason displays the proportion of Yes and No responses in 2006 and 2016 to the question "Should it be possible for a pregnant woman to obtain a legal abortion if the woman wants it for any reason?"

```{r}
#| label: fig-anyreason
#| echo: false
#| warning: false
#| fig-cap: Proportion of Yes and No Responses in 2006 and 2016 to the question "Should it be possible for a pregnant woman to obtain a legal abortion if the woman wants it for any reason?"

# Endangered Health Responses
any_reason_data <- cleaned_GSS_data[c('year', 'any_reason')]

any_reason_percentages <- any_reason_data |>
  count(year, any_reason) |>
  group_by(year) |>
  mutate(percentage = n / sum(n) * 100) 

any_reason_percentages$any_reason <- factor(
  any_reason_percentages$any_reason, levels =
    responses)

ggplot(any_reason_percentages, aes(
  x = as.factor(year),
  y = percentage, 
  fill = any_reason)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(
       x = "Year",
       y = "Percentage",
       fill = "Responses") +
  scale_y_continuous(labels = scales::percent_format(scale = 1), 
                     limits = c(0, 100)) + 
  scale_fill_manual(values = custom_yes_no_colours) +
  theme_minimal()
```

# Results

## Overall Trends

### Age

## 

### Sex

@tbl-rape2006

```{r}
#| label: tbl-rape2006
#| tbl-cap: Rape Response Count and Proportions (%) 2006 by Sex
#| warning: false
#| echo: false

rape_demographic_2006 <- 
  cleaned_GSS_data[c('year','rape','sex')] 

rape_demographic_2006 <- rape_demographic_2006 |>
  filter(year==2006) |>
  mutate(response = factor(rape, levels = responses)) |>
  group_by(response, sex) |>
  summarise(count = n()) |>
  mutate(percentage = round((count / sum(count)) * 100, 2))

kable(rape_demographic_2006, 
      col.names = c('Response',
                    'Sex',
                    'Count',
                    'Percentage'),
      booktabs = TRUE,
      linesep = ""
      )
```

@tbl-rape2016

```{r}
#| label: tbl-rape2016
#| tbl-cap: Rape Response Count and Proportions (%) 2016 by Sex
#| warning: false
#| echo: false

rape_demographic_2016 <- 
  cleaned_GSS_data[c('year','rape','sex')] 

rape_demographic_2016 <- rape_demographic_2016 |>
  filter(year==2016) |>
  mutate(response = factor(rape, levels = responses)) |>
  group_by(response, sex) |>
  summarise(count = n()) |>
  mutate(percentage = round((count / sum(count)) * 100, 2))

kable(rape_demographic_2016, 
      col.names = c('Response',
                    'Sex',
                    'Count',
                    'Percentage'),
      booktabs = TRUE,
      linesep = ""
      )
```

@tbl-health2006

```{r}
#| label: tbl-health2006
#| tbl-cap: Endangered Health Response Count and Proportions (%) 2006 by Sex
#| warning: false
#| echo: false
endangered_health_demographic_2006 <- 
  cleaned_GSS_data[c('year','endangered_health','sex')] 

endangered_health_demographic_2006 <- endangered_health_demographic_2006 |>
  filter(year==2006) |>
  mutate(response = factor(endangered_health, levels = responses)) |>
  group_by(response, sex) |>
  summarise(count = n()) |>
  mutate(percentage = round((count / sum(count)) * 100, 2))

kable(endangered_health_demographic_2006, 
      col.names = c('Response',
                    'Sex',
                    'Count',
                    'Percentage'),
      booktabs = TRUE,
      linesep = ""
      )
```

@tbl-health2016

```{r}
#| label: tbl-health2016
#| tbl-cap: Endangered Health Response Count and Proportions (%) 2016 by Sex
#| warning: false
#| echo: false
endangered_health_demographic_2016 <- 
  cleaned_GSS_data[c('year','endangered_health','sex')] 

endangered_health_demographic_2016 <- endangered_health_demographic_2016 |>
  filter(year==2016) |>
  mutate(response = factor(endangered_health, levels = responses)) |>
  group_by(response, sex) |>
  summarise(count = n()) |>
  mutate(percentage = round((count / sum(count)) * 100, 2))

kable(endangered_health_demographic_2016, 
      col.names = c('Response',
                    'Sex',
                    'Count',
                    'Percentage'),
      booktabs = TRUE,
      linesep = ""
      )
```

@tbl-lowincome2006

```{r}
#| label: tbl-lowincome2006
#| tbl-cap: Low Income Response Count and Proportions (%) 2006 by Sex
#| warning: false
#| echo: false
low_income_demographic_2006 <- 
  cleaned_GSS_data[c('year','low_income','sex')] 

low_income_demographic_2006 <- low_income_demographic_2006 |>
  filter(year==2006) |>
  mutate(response = factor(low_income, levels = responses)) |>
  group_by(response, sex) |>
  summarise(count = n()) |>
  mutate(percentage = round((count / sum(count)) * 100, 2))

low_income_demographic_2006_table <- 
  kable(low_income_demographic_2006,
        col.names = c('Response',
                      'Sex',
                      'Count',
                      'Percentage'),
        booktabs = TRUE,
        linesep = ""
      )

# ft2006 <- flextable(low_income_demographic_2006[ sample.int(10),])
# ft2006 <- add_header_row(ft2006,
#                      colwidths = c(4),
#                      values = c("2006"))
# ft2006 <- align(ft2006, align = "center", part = "header")
# ft2006 <- set_table_properties(ft2006, layout = "autofit")
# ft2006

LID_2006_table <- add_header_above(low_income_demographic_2006_table, 
                                   header = c("2006" = 4))
LID_2006_table

```

@tbl-lowincome2016

```{r}
#| label: tbl-lowincome2016
#| tbl-cap: Low Income Response Count and Proportions (%) 2016 by Sex
#| warning: false
#| echo: false
low_income_demographic_2016 <- 
  cleaned_GSS_data[c('year','low_income','sex')] 

low_income_demographic_2016 <- low_income_demographic_2016 |>
  filter(year==2016) |>
  mutate(response = factor(low_income, levels = responses)) |>
  group_by(response, sex) |>
  summarise(count = n()) |>
  mutate(percentage = round((count / sum(count)) * 100, 2))

low_income_demographic_2016_table <- 
  kable(low_income_demographic_2016,
        col.names = c('Response',
                      'Sex',
                      'Count',
                      'Percentage'),
        booktabs = TRUE,
        linesep = ""
      )


LID_2016_table <- add_header_above(low_income_demographic_2016_table, 
                                   header = c("2016" = 4))
LID_2016_table
```

```{r}
#| label: tbl-lowincomedemo
#| tbl-cap: Low Income Response Count and Proportions (%) by Sex
#| warning: false
#| echo: false

# 2006 table
low_income_demographic_2006 <-
  cleaned_GSS_data[c('year','low_income','sex')] 

low_income_demographic_2006 <- low_income_demographic_2006 |>
  filter(year==2006) |>
  mutate(response = factor(low_income, levels = responses)) |>
  group_by(response, sex) |>
  summarise(count = n()) |>
  mutate(percentage = round((count / sum(count)) * 100, 2))

# 2016 table
low_income_demographic_2016 <- 
  cleaned_GSS_data[c('year','low_income','sex')] 

low_income_demographic_2016 <- low_income_demographic_2016 |>
  filter(year==2016) |>
  mutate(response = factor(low_income, levels = responses)) |>
  group_by(response, sex) |>
  summarise(count = n()) |>
  mutate(percentage = round((count / sum(count)) * 100, 2))

# Combine tables
combined_table <- inner_join(low_income_demographic_2006,
                             low_income_demographic_2016, 
                             by = c("response", "sex"))
kable(combined_table,
      col.names = c("Response",
                    "Sex",
                    "Count",
                    "Percentage",
                    "Count",
                    "Percentage"),
      booktabs = TRUE,
      linesep = "") |>
  add_header_above(c( " " = 2, "2006" = 2, "2016" = 2), bold = TRUE)


```

@tbl-anyreason2006

```{r}
#| label: tbl-anyreason2006
#| tbl-cap: Any Reason Response Count and Proportions (%) 2006 by Sex
#| warning: false
#| echo: false
any_reason_demographic_2006 <- 
  cleaned_GSS_data[c('year','any_reason','sex')] 

any_reason_demographic_2006 <- any_reason_demographic_2006 |>
  filter(year==2006) |>
  mutate(response = factor(any_reason, levels = responses)) |>
  group_by(response, sex) |>
  summarise(count = n()) |>
  mutate(percentage = round((count / sum(count)) * 100, 2))

kable(any_reason_demographic_2006, 
      col.names = c('Response',
                    'Sex',
                    'Count',
                    'Percentage'),
      booktabs = TRUE,
      linesep = ""
      )
```

@tbl-anyreason2016

```{r}
#| label: tbl-anyreason2016
#| tbl-cap: Any Reason Response Count and Proportions (%) 2016 by Sex
#| warning: false
#| echo: false
any_reason_demographic_2016 <- 
  cleaned_GSS_data[c('year','any_reason','sex')] 

any_reason_demographic_2016 <- any_reason_demographic_2016 |>
  filter(year==2016) |>
  mutate(response = factor(any_reason, levels = responses)) |>
  group_by(response, sex) |>
  summarise(count = n()) |>
  mutate(percentage = round((count / sum(count)) * 100, 2))

kable(any_reason_demographic_2016, 
      col.names = c('Response',
                    'Sex',
                    'Count',
                    'Percentage'),
      booktabs = TRUE,
      linesep = ""
      )
```

## Religious Views

# Discussion

## Generational Differences

## Sex

## Religious Views

## Economic Status

## Temporal Movements and Law Changes

-   will talk about the different law changes and movements occurring before, during, and after the specific years

### 2006

### 2016

\newpage

\appendix

# Appendix {.unnumbered}

asdf

\newpage

# References
